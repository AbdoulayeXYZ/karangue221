// Script pour identifier l'extension probl√©matique
// Copiez et collez ce code dans la console du navigateur (F12)

(function() {
    console.log('üîç Identification de l\'extension probl√©matique');
    console.log('=============================================');
    
    // L'ID de l'extension probl√©matique
    const problematicExtensionId = 'pejdijmoenmkgeppbflobdenhhabjlaj';
    
    console.log(`üéØ Extension ID: ${problematicExtensionId}`);
    
    // V√©rifier si l'extension est active
    if (window.chrome && window.chrome.runtime) {
        try {
            // Tentative de communication avec l'extension
            chrome.runtime.sendMessage(problematicExtensionId, {ping: true}, function(response) {
                if (chrome.runtime.lastError) {
                    console.log('‚ùå Extension d√©fectueuse d√©tect√©e:', chrome.runtime.lastError.message);
                } else {
                    console.log('‚úÖ Extension r√©pond normalement');
                }
            });
        } catch(e) {
            console.log('‚ùå Erreur lors de la communication avec l\'extension:', e.message);
        }
    }
    
    // Messages d'information pour l'utilisateur
    console.log('\nüìã Actions recommand√©es:');
    console.log('1. Allez sur chrome://extensions/');
    console.log('2. Recherchez une extension avec l\'ID:', problematicExtensionId);
    console.log('3. D√©sactivez-la temporairement');
    console.log('\nüéØ Extensions communes qui causent ce probl√®me:');
    console.log('- Gestionnaires de mots de passe');
    console.log('- Extensions d\'autocompl√©tion');
    console.log('- Bloqueurs de publicit√© obsol√®tes');
    console.log('- Extensions de productivit√©');
    
    // Bloquer les requ√™tes vers cette extension
    console.log('\nüõ°Ô∏è Blocage des requ√™tes vers l\'extension d√©fectueuse...');
    
    // Intercepter les requ√™tes r√©seau
    const originalFetch = window.fetch;
    window.fetch = function(...args) {
        const url = args[0];
        if (typeof url === 'string' && url.includes(problematicExtensionId)) {
            console.log('üö´ Requ√™te bloqu√©e vers extension d√©fectueuse:', url);
            return Promise.reject(new Error('Extension request blocked'));
        }
        return originalFetch.apply(this, args);
    };
    
    console.log('‚úÖ Protection contre l\'extension d√©fectueuse activ√©e!');
})();
